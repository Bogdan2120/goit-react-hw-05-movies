{"version":3,"file":"static/js/81.60e7377f.chunk.js","mappings":"uRACA,EAAgC,uCAAhC,EAAqF,qCAArF,EAAgI,6BAAhI,EAA+K,yC,SCoG/K,EAtFyB,WAAO,IAAD,IAC7B,GAAwCA,EAAAA,EAAAA,UAAS,IAAjD,eAAOC,EAAP,KAAqBC,EAArB,KACA,GAA8BF,EAAAA,EAAAA,WAAS,GAAvC,eAAOG,EAAP,KAAgBC,EAAhB,KACQC,GAAOC,EAAAA,EAAAA,MAAPD,GACFE,GAAWC,EAAAA,EAAAA,MAEXC,EAAI,qBADOC,EAAAA,EAAAA,MACKC,aAAZ,aAAG,EAAgBF,YAAnB,QAA2B,IAE/BG,GAAgD,GAA5BX,EAAaY,cAAmBC,QAAQ,IAElEC,EAAAA,EAAAA,YAAU,WACR,IAAMC,EAAU,mCAAG,0HAEfZ,GAAW,GAFI,UAYLa,EAAAA,EAAAA,IAAiBZ,GAZZ,oBAIba,KAJa,IAKXC,eAAAA,OALW,MAKM,MALN,EAMXC,EANW,EAMXA,YACAP,EAPW,EAOXA,aACAQ,EARW,EAQXA,SARW,IASXC,aAAcC,OATH,MASwB,MATxB,EAUHC,EAVG,EAUXC,OAIEC,EAAS,CACbP,eAAAA,EACAC,YAAaA,EAAW,6DACkCA,GACtD,KACJP,aAAAA,EACAQ,SAAAA,EACAC,aAAcC,EAAmBI,MAAM,EAAG,GAC1CF,OAAQD,EAAWI,KAAI,SAAAC,GAAG,OAAIA,EAAIC,IAAR,IAAcC,KAAK,OAE/C7B,EAAgBwB,GAxBD,kDAyBNM,EAzBM,KAyBNA,SACTC,IAAAA,OAAAA,QAAwB,qBACxBC,QAAQC,IAAIH,EAASd,KAAKkB,SA3BX,yBA6BfhC,GAAW,GA7BI,6EAAH,qDAgChBY,GACD,GAAE,CAACX,IAMJ,OACE,gCACGF,EACG8B,IAAAA,QAAAA,SAA0B,cAC1BA,IAAAA,QAAAA,UACJ,mBAAQI,UAAWC,EAAWC,QATnB,WACbhC,EAASE,EACV,EAOG,6BAGA,iBAAK4B,UAAWC,EAAhB,WACE,gBACEE,IAAI,eACJC,IAAKxC,EAAamB,YAAcnB,EAAamB,YAAcsB,KAE7D,iBAAKL,UAAWC,EAAhB,WACE,iCACGrC,QADH,IACGA,OADH,EACGA,EAAckB,eADjB,YACmClB,QADnC,IACmCA,OADnC,EACmCA,EAAcqB,aADjD,QAGA,wCAAgBV,EAAhB,QACA,6CAAcX,QAAd,IAAcA,OAAd,EAAcA,EAAcoB,aAC5B,2CAAYpB,QAAZ,IAAYA,OAAZ,EAAYA,EAAcwB,iBAG9B,gBAAIY,UAAWC,EAAf,WACE,qDACA,SAAC,KAAD,CAAMK,GAAG,OAAOhC,MAAO,CAAEF,KAAAA,GAAzB,UACE,oCAEF,SAAC,KAAD,CAAMkC,GAAG,UAAUhC,MAAO,CAAEF,KAAAA,GAA5B,UACE,0CAGJ,SAAC,KAAD,MAGL,C,8JCjGKmC,E,OAAWC,EAAAA,OAAa,CAC5BC,QAAS,+BACTC,OAAQ,CACNC,QAAS,sCAIAC,EAAY,mCAAG,WAAMC,GAAN,yFACHN,EAASO,IAAI,gBAAiB,CACnDJ,OAAQ,CACNG,MAAAA,KAHsB,uBAClBhC,EADkB,EAClBA,KADkB,kBAMnBA,GANmB,2CAAH,sDASZkC,EAAS,mCAAG,sGACAR,EAASO,IAAI,uBADb,uBACfjC,EADe,EACfA,KADe,kBAEhBA,GAFgB,2CAAH,qDAKTD,EAAgB,mCAAG,WAAMZ,GAAN,uFACXuC,EAASO,IAAT,iBAAuB9C,IADZ,cACxBa,EADwB,yBAEvBA,GAFuB,2CAAH,sDAKhBmC,EAAqB,mCAAG,WAAOhD,GAAP,8FAAWiD,EAAX,+BAAiB,GAAjB,SACZV,EAASO,IAAT,iBAAuB9C,GAAvB,OAA4BiD,IADhB,uBAC3BpC,EAD2B,EAC3BA,KAD2B,kBAE5BA,GAF4B,2CAAH,qD","sources":["webpack://goit-react-hw-05-movies/./src/pages/MovieDetailsPage/singleMoviePage.module.css?febf","pages/MovieDetailsPage/MovieDetailsPage.jsx","services/getMovies.js"],"sourcesContent":["// extracted by mini-css-extract-plugin\nexport default {\"movie_details\":\"singleMoviePage_movie_details__wnskO\",\"descr_block\":\"singleMoviePage_descr_block__pRcZe\",\"btn\":\"singleMoviePage_btn__F5jIO\",\"underline_light\":\"singleMoviePage_underline_light__elPbr\"};","import {\n  Outlet,\n  Link,\n  useParams,\n  useNavigate,\n  useLocation,\n} from 'react-router-dom';\nimport { useState, useEffect } from 'react';\nimport Notiflix from 'notiflix';\n\nimport { getMoviesDetails } from '../../services/getMovies';\nimport poster from '../../img/no-poster-available.webp';\n\nimport style from './singleMoviePage.module.css';\n\nconst MovieDetailsPage = () => {\n  const [movieDetails, setMovieDetails] = useState([]);\n  const [loading, setLoading] = useState(false);\n  const { id } = useParams();\n  const navigate = useNavigate();\n  const location = useLocation();\n  const from = location.state?.from ?? '/';\n\n  const voteAverageShort = (movieDetails.vote_average * 10).toFixed(0);\n\n  useEffect(() => {\n    const fetchMovie = async () => {\n      try {\n        setLoading(true);\n        const {\n          data: {\n            original_title = 'n/a',\n            poster_path,\n            vote_average,\n            overview,\n            release_date: release_date_slice = 'n/a',\n            genres: genres_map,\n          },\n        } = await getMoviesDetails(id);\n\n        const result = {\n          original_title,\n          poster_path: poster_path\n            ? `https://www.themoviedb.org/t/p/w300_and_h450_bestv2${poster_path}`\n            : null,\n          vote_average,\n          overview,\n          release_date: release_date_slice.slice(0, 4),\n          genres: genres_map.map(gen => gen.name).join(', '),\n        };\n        setMovieDetails(result);\n      } catch ({ responce }) {\n        Notiflix.Notify.failure('An error occurred');\n        console.log(responce.data.message);\n      } finally {\n        setLoading(false);\n      }\n    };\n    fetchMovie();\n  }, [id]);\n\n  const goBack = () => {\n    navigate(from);\n  };\n\n  return (\n    <>\n      {loading\n        ? Notiflix.Loading.standard('Loading...')\n        : Notiflix.Loading.remove()}\n      <button className={style.btn} onClick={goBack}>\n        &#x21A9; Go back\n      </button>\n      <div className={style.movie_details}>\n        <img\n          alt=\"movie poster\"\n          src={movieDetails.poster_path ? movieDetails.poster_path : poster}\n        />\n        <div className={style.descr_block}>\n          <h1>\n            {movieDetails?.original_title} ({movieDetails?.release_date})\n          </h1>\n          <p>User Score: {voteAverageShort}%</p>\n          <p>Overview: {movieDetails?.overview}</p>\n          <p>Genres: {movieDetails?.genres}</p>\n        </div>\n      </div>\n      <ul className={style.underline_light}>\n        <p>Additionaly information:</p>\n        <Link to=\"cast\" state={{ from }}>\n          <li>Cast</li>\n        </Link>\n        <Link to=\"reviews\" state={{ from }}>\n          <li>Reviews</li>\n        </Link>\n      </ul>\n      <Outlet />\n    </>\n  );\n};\n\nexport default MovieDetailsPage;\n","import axios from 'axios';\n\nconst instance = axios.create({\n  baseURL: 'https://api.themoviedb.org/3',\n  params: {\n    api_key: '633bd9c8c9bc68a8c4a40449237d5fcd',\n  },\n});\n\nexport const searchMovies = async query => {\n  const { data } = await instance.get('/search/movie', {\n    params: {\n      query,\n    },\n  });\n  return data;\n};\n\nexport const getMovies = async () => {\n  const { data } = await instance.get('/trending/movie/day');\n  return data;\n};\n\nexport const getMoviesDetails = async id => {\n  const data = await instance.get(`/movie/${id}`);\n  return data;\n};\n\nexport const getMoviesAdditionally = async (id, req = '') => {\n  const { data } = await instance.get(`/movie/${id}${req}`);\n  return data;\n};\n"],"names":["useState","movieDetails","setMovieDetails","loading","setLoading","id","useParams","navigate","useNavigate","from","useLocation","state","voteAverageShort","vote_average","toFixed","useEffect","fetchMovie","getMoviesDetails","data","original_title","poster_path","overview","release_date","release_date_slice","genres_map","genres","result","slice","map","gen","name","join","responce","Notiflix","console","log","message","className","style","onClick","alt","src","poster","to","instance","axios","baseURL","params","api_key","searchMovies","query","get","getMovies","getMoviesAdditionally","req"],"sourceRoot":""}