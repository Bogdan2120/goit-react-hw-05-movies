{"version":3,"file":"static/js/680.afbb9089.chunk.js","mappings":"oMACA,GAAiB,E,SCKXA,EAAa,SAAC,GAAe,IAAbC,EAAY,EAAZA,MACdC,GAAWC,EAAAA,EAAAA,MACXC,EAAWH,EAAMI,KAAI,gBAAGC,EAAH,EAAGA,GAAIC,EAAP,EAAOA,MAAOC,EAAd,EAAcA,eAAd,OACzB,SAAC,KAAD,CAEEC,GAAE,kBAAaH,GACfI,UAAWC,EAAAA,WACXC,MAAO,CAAEC,KAAMX,GAJjB,UAME,wBAAKK,GAASC,KALTF,EAFkB,IAU3B,OAAO,eAAII,UAAWC,EAAAA,WAAf,SAAkCP,GAC1C,EAED,GAAeU,EAAAA,EAAAA,MAAKd,E,oICSpB,UAxBiB,WACf,OAA0Be,EAAAA,EAAAA,UAAS,IAAnC,eAAOd,EAAP,KAAce,EAAd,KAgBA,OAdAC,EAAAA,EAAAA,YAAU,WACR,IAAMC,EAAW,mCAAG,kHAEGC,EAAAA,EAAAA,MAFH,OAEVC,EAFU,OAGRC,EAAYD,EAAZC,QACRL,GAAS,OAAIK,IAJG,gDAKPC,EALO,KAKPA,SACTC,IAAAA,OAAAA,QAAwB,qBACxBC,QAAQC,IAAIH,EAASF,KAAKM,SAPV,yDAAH,qDAWjBR,GACD,GAAE,CAACF,KAEF,+BACE,SAAC,IAAD,CAAYf,MAAOA,KAGxB,C,8JC1BK0B,E,OAAWC,EAAAA,OAAa,CAC5BC,QAAS,+BACTC,OAAQ,CACNC,QAAS,sCAIAC,EAAY,mCAAG,WAAMC,GAAN,yFACHN,EAASO,IAAI,gBAAiB,CACnDJ,OAAQ,CACNG,MAAAA,KAHsB,uBAClBb,EADkB,EAClBA,KADkB,kBAMnBA,GANmB,2CAAH,sDASZD,EAAS,mCAAG,sGACAQ,EAASO,IAAI,uBADb,uBACfd,EADe,EACfA,KADe,kBAEhBA,GAFgB,2CAAH,qDAKTe,EAAgB,mCAAG,WAAM7B,GAAN,uFACXqB,EAASO,IAAT,iBAAuB5B,IADZ,cACxBc,EADwB,yBAEvBA,GAFuB,2CAAH,sDAKhBgB,EAAqB,mCAAG,WAAO9B,GAAP,8FAAW+B,EAAX,+BAAiB,GAAjB,SACZV,EAASO,IAAT,iBAAuB5B,GAAvB,OAA4B+B,IADhB,uBAC3BjB,EAD2B,EAC3BA,KAD2B,kBAE5BA,GAF4B,2CAAH,qD","sources":["modules/MoviesList/moviesList.module.css","modules/MoviesList/MoviesList.jsx","pages/HomePage/HomePage.jsx","services/getMovies.js"],"sourcesContent":["// extracted by mini-css-extract-plugin\nexport default {};","import { memo } from 'react';\nimport { Link, useLocation } from 'react-router-dom';\nimport PropTypes from 'prop-types';\n\nimport style from './moviesList.module.css';\n\nconst MoviesList = ({ items }) => {\n  const location = useLocation();\n  const elements = items.map(({ id, title, original_title }) => (\n    <Link\n      key={id}\n      to={`/movies/${id}`}\n      className={style.moviesItem}\n      state={{ from: location }}\n    >\n      <li>{title || original_title}</li>\n    </Link>\n  ));\n  return <ul className={style.moviesList}>{elements}</ul>;\n};\n\nexport default memo(MoviesList);\n\nMoviesList.propTypes = {\n  items: PropTypes.arrayOf(\n    PropTypes.shape({\n      id: PropTypes.number.isRequired,\n      title: PropTypes.string,\n      original_title: PropTypes.string,\n    })\n  ).isRequired,\n};\n","import { useState, useEffect } from 'react';\nimport Notiflix from 'notiflix';\n\nimport MoviesList from 'modules/MoviesList/MoviesList';\nimport { getMovies } from 'services/getMovies';\n\nconst HomePage = () => {\n  const [items, setItems] = useState([]);\n\n  useEffect(() => {\n    const fetchMovies = async () => {\n      try {\n        const data = await getMovies();\n        const { results } = data;\n        setItems([...results]);\n      } catch ({ responce }) {\n        Notiflix.Notify.failure('An error occurred');\n        console.log(responce.data.message);\n      }\n    };\n\n    fetchMovies();\n  }, [setItems]);\n  return (\n    <>\n      <MoviesList items={items} />\n    </>\n  );\n};\n\nexport default HomePage;\n","import axios from 'axios';\n\nconst instance = axios.create({\n  baseURL: 'https://api.themoviedb.org/3',\n  params: {\n    api_key: '633bd9c8c9bc68a8c4a40449237d5fcd',\n  },\n});\n\nexport const searchMovies = async query => {\n  const { data } = await instance.get('/search/movie', {\n    params: {\n      query,\n    },\n  });\n  return data;\n};\n\nexport const getMovies = async () => {\n  const { data } = await instance.get('/trending/movie/day');\n  return data;\n};\n\nexport const getMoviesDetails = async id => {\n  const data = await instance.get(`/movie/${id}`);\n  return data;\n};\n\nexport const getMoviesAdditionally = async (id, req = '') => {\n  const { data } = await instance.get(`/movie/${id}${req}`);\n  return data;\n};\n"],"names":["MoviesList","items","location","useLocation","elements","map","id","title","original_title","to","className","style","state","from","memo","useState","setItems","useEffect","fetchMovies","getMovies","data","results","responce","Notiflix","console","log","message","instance","axios","baseURL","params","api_key","searchMovies","query","get","getMoviesDetails","getMoviesAdditionally","req"],"sourceRoot":""}