{"version":3,"file":"static/js/618.f8992b4c.chunk.js","mappings":"oMACA,GAAiB,E,SCKXA,EAAa,SAAC,GAAe,IAAbC,EAAY,EAAZA,MACdC,GAAWC,EAAAA,EAAAA,MACXC,EAAWH,EAAMI,KAAI,gBAAGC,EAAH,EAAGA,GAAIC,EAAP,EAAOA,MAAOC,EAAd,EAAcA,eAAd,OACzB,SAAC,KAAD,CAEEC,GAAE,kBAAaH,GACfI,UAAWC,EAAAA,WACXC,MAAO,CAAEC,KAAMX,GAJjB,UAME,wBAAKK,GAASC,KALTF,EAFkB,IAU3B,OAAO,eAAII,UAAWC,EAAAA,WAAf,SAAkCP,GAC1C,EAED,GAAeU,EAAAA,EAAAA,MAAKd,E,uJCpBpB,GAAgB,WAAa,iCAAiC,aAAe,oC,SCKvEe,EAAmB,SAAC,GAAkB,IAAhBC,EAAe,EAAfA,SAC1B,GAA2BC,EAAAA,EAAAA,UAAS,IAApC,eAAOC,EAAP,KAAcC,EAAd,KAeA,OACE,iBAAMT,UAAWC,EAAAA,KAAYK,SATV,SAAAI,GAEnB,GADAA,EAAEC,iBACY,KAAVH,EACF,OAAOI,IAAAA,OAAAA,QAAwB,4BAEjCN,EAASE,EACV,EAGC,UACE,4BACE,kBAAOK,QAAQ,GAAf,qBACA,kBACEb,UAAWC,EAAAA,aACXa,MAAON,EACPO,SApBa,SAAC,GAAgB,IAC5BD,EAD2B,EAAbE,OACdF,MACRL,EAAUK,EACX,EAkBOG,KAAK,SACLC,YAAY,eACZC,UAAQ,KAEV,mBAAQnB,UAAWC,EAAAA,WAAkBmB,KAAK,SAA1C,wBAMP,EAED,GAAehB,EAAAA,EAAAA,MAAKC,G,kBCzCpB,EAA+B,iCC0C/B,EAjCmB,WACjB,OAA0BE,EAAAA,EAAAA,UAAS,IAAnC,eAAOhB,EAAP,KAAc8B,EAAd,KACA,GAAwCC,EAAAA,EAAAA,MAAxC,eAAOC,EAAP,KAAqBC,EAArB,KACMC,EAASF,EAAaG,IAAI,WAEhCC,EAAAA,EAAAA,YAAU,WACR,GAAKF,EAAL,CAGA,IAAMG,EAAW,mCAAG,gHAEGC,EAAAA,EAAAA,IAAaJ,GAFhB,OAEVK,EAFU,OAGhBT,GAAS,OAAIS,EAAKC,UAHF,gDAIPC,EAJO,KAIPA,SACTpB,IAAAA,OAAAA,QAAwB,qBACxBqB,QAAQC,IAAIF,EAASF,KAAKK,SANV,yDAAH,qDASjBP,GAVC,CAWF,GAAE,CAACH,EAAQJ,IAMZ,OACE,iBAAKrB,UAAWC,EAAhB,WACE,SAAC,EAAD,CAAkBK,SANC,SAAC,GAAgB,IAAdmB,EAAa,EAAbA,OACxBD,EAAgBC,EACjB,KAKG,SAACnC,EAAA,EAAD,CAAYC,MAAOA,MAGxB,C,8JCvCK6C,E,OAAWC,EAAAA,OAAa,CAC5BC,QAAS,+BACTC,OAAQ,CACNC,QAAS,sCAIAX,EAAY,mCAAG,WAAMrB,GAAN,yFACH4B,EAASV,IAAI,gBAAiB,CACnDa,OAAQ,CACN/B,MAAAA,KAHsB,uBAClBsB,EADkB,EAClBA,KADkB,kBAMnBA,GANmB,2CAAH,sDASZW,EAAS,mCAAG,sGACAL,EAASV,IAAI,uBADb,uBACfI,EADe,EACfA,KADe,kBAEhBA,GAFgB,2CAAH,qDAKTY,EAAgB,mCAAG,WAAM9C,GAAN,uFACXwC,EAASV,IAAT,iBAAuB9B,IADZ,cACxBkC,EADwB,yBAEvBA,GAFuB,2CAAH,sDAKhBa,EAAqB,mCAAG,WAAO/C,GAAP,8FAAWgD,EAAX,+BAAiB,GAAjB,SACZR,EAASV,IAAT,iBAAuB9B,GAAvB,OAA4BgD,IADhB,uBAC3Bd,EAD2B,EAC3BA,KAD2B,kBAE5BA,GAF4B,2CAAH,qD","sources":["modules/MoviesList/moviesList.module.css","modules/MoviesList/MoviesList.jsx","webpack://goit-react-hw-05-movies/./src/modules/MoviesSearchForm/moviesSearch.module.css?22a4","modules/MoviesSearchForm/MoviesSearchForm.jsx","webpack://goit-react-hw-05-movies/./src/pages/MoviesPage/moviesPage.module.css?8b89","pages/MoviesPage/MoviesPage.jsx","services/getMovies.js"],"sourcesContent":["// extracted by mini-css-extract-plugin\nexport default {};","import { memo } from 'react';\nimport { Link, useLocation } from 'react-router-dom';\nimport PropTypes from 'prop-types';\n\nimport style from './moviesList.module.css';\n\nconst MoviesList = ({ items }) => {\n  const location = useLocation();\n  const elements = items.map(({ id, title, original_title }) => (\n    <Link\n      key={id}\n      to={`/movies/${id}`}\n      className={style.moviesItem}\n      state={{ from: location }}\n    >\n      <li>{title || original_title}</li>\n    </Link>\n  ));\n  return <ul className={style.moviesList}>{elements}</ul>;\n};\n\nexport default memo(MoviesList);\n\nMoviesList.propTypes = {\n  items: PropTypes.arrayOf(\n    PropTypes.shape({\n      id: PropTypes.number.isRequired,\n      title: PropTypes.string,\n      original_title: PropTypes.string,\n    })\n  ).isRequired,\n};\n","// extracted by mini-css-extract-plugin\nexport default {\"search_btn\":\"moviesSearch_search_btn__A9VcL\",\"search_input\":\"moviesSearch_search_input__JxYkr\"};","import { memo } from 'react';\nimport { useState } from 'react';\nimport PropTypes from 'prop-types';\nimport Notiflix from 'notiflix';\nimport style from './moviesSearch.module.css';\n\nconst MoviesSearchForm = ({ onSubmit }) => {\n  const [query, setQuerye] = useState('');\n\n  const handleChange = ({ target }) => {\n    const { value } = target;\n    setQuerye(value);\n  };\n\n  const handleSubmit = e => {\n    e.preventdefault();\n    if (query === '') {\n      return Notiflix.Notify.failure('Enter text and try again');\n    }\n    onSubmit(query);\n  };\n\n  return (\n    <form className={style.form} onSubmit={handleSubmit}>\n      <div>\n        <label htmlFor=\"\">Search</label>\n        <input\n          className={style.search_input}\n          value={query}\n          onChange={handleChange}\n          name=\"search\"\n          placeholder=\"Search movie\"\n          required\n        />\n        <button className={style.search_btn} type=\"submit\">\n          Search\n        </button>\n      </div>\n    </form>\n  );\n};\n\nexport default memo(MoviesSearchForm);\n\nMoviesSearchForm.propTypes = {\n  onSubmit: PropTypes.func.isRequired,\n};\n","// extracted by mini-css-extract-plugin\nexport default {\"search_block\":\"moviesPage_search_block__p0WWI\"};","import { useState, useEffect } from 'react';\nimport { useSearchParams } from 'react-router-dom';\nimport Notiflix from 'notiflix';\n\nimport MoviesSearchForm from 'modules/MoviesSearchForm/MoviesSearchForm';\nimport MoviesList from 'modules/MoviesList/MoviesList';\nimport { searchMovies } from 'services/getMovies';\n\nimport style from './moviesPage.module.css';\n\nconst MoviesPage = () => {\n  const [items, setItems] = useState([]);\n  const [searchParams, setSearchParams] = useSearchParams();\n  const search = searchParams.get('search');\n\n  useEffect(() => {\n    if (!search) {\n      return;\n    }\n    const fetchMovies = async () => {\n      try {\n        const data = await searchMovies(search);\n        setItems([...data.results]);\n      } catch ({ responce }) {\n        Notiflix.Notify.failure('An error occurred');\n        console.log(responce.data.message);\n      }\n    };\n    fetchMovies();\n  }, [search, setItems]);\n\n  const onSearchMovies = ({ search }) => {\n    setSearchParams(search);\n  };\n\n  return (\n    <div className={style.search_block}>\n      <MoviesSearchForm onSubmit={onSearchMovies} />\n      <MoviesList items={items} />\n    </div>\n  );\n};\n\nexport default MoviesPage;\n","import axios from 'axios';\n\nconst instance = axios.create({\n  baseURL: 'https://api.themoviedb.org/3',\n  params: {\n    api_key: '633bd9c8c9bc68a8c4a40449237d5fcd',\n  },\n});\n\nexport const searchMovies = async query => {\n  const { data } = await instance.get('/search/movie', {\n    params: {\n      query,\n    },\n  });\n  return data;\n};\n\nexport const getMovies = async () => {\n  const { data } = await instance.get('/trending/movie/day');\n  return data;\n};\n\nexport const getMoviesDetails = async id => {\n  const data = await instance.get(`/movie/${id}`);\n  return data;\n};\n\nexport const getMoviesAdditionally = async (id, req = '') => {\n  const { data } = await instance.get(`/movie/${id}${req}`);\n  return data;\n};\n"],"names":["MoviesList","items","location","useLocation","elements","map","id","title","original_title","to","className","style","state","from","memo","MoviesSearchForm","onSubmit","useState","query","setQuerye","e","preventdefault","Notiflix","htmlFor","value","onChange","target","name","placeholder","required","type","setItems","useSearchParams","searchParams","setSearchParams","search","get","useEffect","fetchMovies","searchMovies","data","results","responce","console","log","message","instance","axios","baseURL","params","api_key","getMovies","getMoviesDetails","getMoviesAdditionally","req"],"sourceRoot":""}